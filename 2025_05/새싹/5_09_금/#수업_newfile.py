#파이썬의 입출력의 기본은 파일 입출력이다.
#C언어가 처음으로 모든 장비의 입출력 기본을 파일입출력으로 한 이후 나온 언어들은
#C규칙을 따른다 
#파일은 여러개가 있어서 특정파일과 연결하는 작업이 필요하다 
#이를 open이라고 한다 
#첫번째 파라미터는 경로를 포함한 파일명이다. 
#경로 생략시 현재 프로그램이 가동중인 폴더에 파일을 만든다. 
#두번째 매개변수는 용도이다. w 는 write 용으로 파일을 만들겠다는 의미이다
#만일 파일이 없으면 새로 만든다. 기존에 파일이 존재하면 내용을 모두 지운다
file = open("데이터파일.txt", "w") #반환대상은 파일객체
file.write("Hello")#출력이 파일로 
file.close() 

#dir *.txt 확장자가 txt란 파일목록만 확인 
#type 파일명  파일내용확인하기 

#파일의 경로에  리눅스는 os / (슬래쉬)를 사용한다 
#파일의 경로에  윈도우는 os \ (역슬래쉬, 한글폰트의 경우 원화표시)를 사용한다 
#  c:\temp\test  C:탭emp탭est 
#  c:\\temp\\test    r"c:\temp\test"
#  rstring 은 문자열앞에 r을 붙이면 escape키(\)를 무력화시킨다 
# 파일경로를 나타내는 방법이 2가지가 있다. 절대적경로, 상대적경로 
# 절대적 경로는 루트부터 시작한다. c:\\test\\test
# 상대적 경로는 현재 프로그램이 가동중인 폴더 기준으로
# . :내폴더  .. :부모폴더 
#   "./test.txt"   "test.txt" 둘이 동일한 의미 
# "../test.txt" 현재 이폴더보다 하나위로 올라가서 파일을 만들어라 
# 절대경로는 특별한 경우를 제외하고는 폴더전체가 이동될때 문제가 생긴다 
# 그래서 가급적 쓰지말자. 
# 리눅스는 폴더나  파일에 공백안됨 대소문자 구분함 확장자의미없음 
# 윈도우는 폴더나 파일에 공백가능, 대소문자 구분 안함 
# 윈도우 os에서  TEST -> test  안먹힘 TEST -> 1 -> test이런식으로 바꿔야 
# 인식이 된다.  
# 드라이브명은 윈도우만 있음 

f = open("데이터파일2.txt", "w")
for i in range(1, 11):
    print(f"i={i}", file=f)
f.close()   #print 함수의 기본출력장치가 모니터인데 file이라는 파라미터에 
            #file객체를 주면 화면에 출력이 안되고 파일로 출력한다
print("작업완료")

f = open("데이터파일3.txt", "w")
for i in range(1, 11):
    s = "i= %d\n" % (i) #파이썬 2부터 있던 코드
    f.write(s) 
f.close()   #print 함수의 기본출력장치가 모니터인데 file이라는 파라미터에 
            #file객체를 주면 화면에 출력이 안되고 파일로 출력한다
print("작업완료")

f = open("/doit/데이터파일4.txt", "w")
for i in range(1, 11):
    s = "i= %d" % (i) #파이썬 2부터 있던 코드
    f.writelines(s) 
f.close()   #print 함수의 기본출력장치가 모니터인데 file이라는 파라미터에 
            #file객체를 주면 화면에 출력이 안되고 파일로 출력한다
print("작업완료")